{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '47399675-043703f8487c7f7d0445216cc';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport const fetchImages = async query => {\r\n  try {\r\n    const response = await axios.get(BASE_URL, {\r\n      params: {\r\n        key: API_KEY,\r\n        q: query,\r\n        image_type: 'photo',\r\n        orientation: 'horizontal',\r\n        safesearch: true,\r\n      },\r\n    });\r\n\r\n    return response.data.hits;\r\n  } catch (error) {\r\n    console.error('Error fetching images:', error);\r\n    throw new Error('Failed to fetch images');\r\n  }\r\n};\r\n","import SimpleLightbox from 'simplelightbox';\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\nimport iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\nconst lightbox = new SimpleLightbox('.gallery a');\r\nexport const clearGallery = () => {\r\n  const gallery = document.querySelector('.gallery');\r\n  gallery.innerHTML = '';\r\n};\r\n\r\nexport const renderImages = images => {\r\n  const gallery = document.querySelector('.gallery');\r\n\r\n  const markup = images\r\n    .map(\r\n      image => `\r\n    <a href=\"${image.largeImageURL}\" class=\"gallery-item\">\r\n      <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\r\n      <div class=\"info\">\r\n        <p>Likes: ${image.likes}</p>\r\n        <p>Views: ${image.views}</p>\r\n        <p>Comments: ${image.comments}</p>\r\n        <p>Downloads: ${image.downloads}</p>\r\n      </div>\r\n    </a>\r\n  `\r\n    )\r\n    .join('');\r\n\r\n  gallery.insertAdjacentHTML('beforeend', markup);\r\n  lightbox.refresh();\r\n};\r\n\r\nexport const showLoadingIndicator = () => {\r\n  const loader = document.querySelector('.loader');\r\n  loader.style.display = 'block';\r\n  loader.innerHTML = `\r\n    <p class=\"loader-text\">Loading images, please wait...</p>\r\n  `;\r\n};\r\n\r\nexport const hideLoadingIndicator = () => {\r\n  const loader = document.querySelector('.loader');\r\n  loader.style.display = 'none';\r\n};\r\n\r\nexport const showNoImagesFoundMessage = () => {\r\n  iziToast.error({\r\n    title: 'Sorry!',\r\n    message:\r\n      'There are no images matching your search query. Please try again!',\r\n  });\r\n};\r\n","import { fetchImages } from './js/pixabay-api.js';\r\nimport {\r\n  renderImages,\r\n  clearGallery,\r\n  showLoadingIndicator,\r\n  hideLoadingIndicator,\r\n  showNoImagesFoundMessage,\r\n} from './js/render-functions.js';\r\n\r\nconst form = document.querySelector('.search-form');\r\nconst input = document.querySelector('.search-input');\r\n\r\nform.addEventListener('submit', async e => {\r\n  e.preventDefault();\r\n  const query = input.value.trim();\r\n\r\n  if (!query) {\r\n    iziToast.warning({\r\n      title: 'Warning!',\r\n      message: 'Please enter a search query.',\r\n    });\r\n    return;\r\n  }\r\n\r\n  clearGallery();\r\n  showLoadingIndicator();\r\n\r\n  const startTime = Date.now(); \r\n\r\n  try {\r\n    const images = await fetchImages(query);\r\n\r\n    const elapsedTime = Date.now() - startTime; \r\n    const MIN_LOADING_TIME = 500; \r\n\r\n   \r\n    if (elapsedTime < MIN_LOADING_TIME) {\r\n      await new Promise(resolve =>\r\n        setTimeout(resolve, MIN_LOADING_TIME - elapsedTime)\r\n      );\r\n    }\r\n\r\n    if (images.length === 0) {\r\n      showNoImagesFoundMessage();\r\n      return;\r\n    }\r\n    renderImages(images);\r\n  } catch (error) {\r\n    console.error('Error occurred:', error);\r\n    iziToast.error({\r\n      title: 'Error!',\r\n      message: 'Something went wrong. Please try again later.',\r\n    });\r\n  } finally {\r\n    hideLoadingIndicator(); \r\n  }\r\n});\r\n"],"names":["API_KEY","BASE_URL","fetchImages","query","axios","error","lightbox","SimpleLightbox","clearGallery","gallery","renderImages","images","markup","image","showLoadingIndicator","loader","hideLoadingIndicator","showNoImagesFoundMessage","iziToast","form","input","e","startTime","elapsedTime","MIN_LOADING_TIME","resolve"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAc,MAAMC,GAAS,CACxC,GAAI,CAWF,OAViB,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GAEe,KAAK,IACtB,OAAQE,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvC,IAAI,MAAM,wBAAwB,CACzC,CACH,EClBMC,EAAW,IAAIC,EAAe,YAAY,EACnCC,EAAe,IAAM,CAChC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACtB,EAEaC,EAAeC,GAAU,CACpC,MAAMF,EAAU,SAAS,cAAc,UAAU,EAE3CG,EAASD,EACZ,IACCE,GAAS;AAAA,eACAA,EAAM,aAAa;AAAA,kBAChBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,oBAEpCA,EAAM,KAAK;AAAA,oBACXA,EAAM,KAAK;AAAA,uBACRA,EAAM,QAAQ;AAAA,wBACbA,EAAM,SAAS;AAAA;AAAA;AAAA,GAIlC,EACA,KAAK,EAAE,EAEVJ,EAAQ,mBAAmB,YAAaG,CAAM,EAC9CN,EAAS,QAAO,CAClB,EAEaQ,EAAuB,IAAM,CACxC,MAAMC,EAAS,SAAS,cAAc,SAAS,EAC/CA,EAAO,MAAM,QAAU,QACvBA,EAAO,UAAY;AAAA;AAAA,GAGrB,EAEaC,EAAuB,IAAM,CACxC,MAAMD,EAAS,SAAS,cAAc,SAAS,EAC/CA,EAAO,MAAM,QAAU,MACzB,EAEaE,EAA2B,IAAM,CAC5CC,EAAS,MAAM,CACb,MAAO,SACP,QACE,mEACN,CAAG,CACH,EC3CMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAQ,SAAS,cAAc,eAAe,EAEpDD,EAAK,iBAAiB,SAAU,MAAME,GAAK,CACzCA,EAAE,eAAc,EAChB,MAAMlB,EAAQiB,EAAM,MAAM,KAAI,EAE9B,GAAI,CAACjB,EAAO,CACV,SAAS,QAAQ,CACf,MAAO,WACP,QAAS,8BACf,CAAK,EACD,MACD,CAEDK,IACAM,IAEA,MAAMQ,EAAY,KAAK,MAEvB,GAAI,CACF,MAAMX,EAAS,MAAMT,EAAYC,CAAK,EAEhCoB,EAAc,KAAK,IAAG,EAAKD,EAC3BE,EAAmB,IASzB,GANID,EAAcC,GAChB,MAAM,IAAI,QAAQC,GAChB,WAAWA,EAASD,EAAmBD,CAAW,CAC1D,EAGQZ,EAAO,SAAW,EAAG,CACvBM,IACA,MACD,CACDP,EAAaC,CAAM,CACpB,OAAQN,EAAO,CACd,QAAQ,MAAM,kBAAmBA,CAAK,EACtC,SAAS,MAAM,CACb,MAAO,SACP,QAAS,+CACf,CAAK,CACL,QAAY,CACRW,GACD,CACH,CAAC"}